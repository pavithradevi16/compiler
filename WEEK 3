1) for to while.l
%option noyywrap
%{
        #include<stdio.h>
%}
%%

"for" {printf("while");}
"("[a-z]"="[0-9]";" ;
[a-z][<>=][a-z]";" {printf("( condition: %s){\n",yytext);}
[a-z]  {printf("( Increment/Decrement: %s)}\n",yytext);}

%%
int main(){
        yylex();
        return 0;
}

o/p: 
for(i=0;i<5;i++)
while( Increment/Decrement: i)}
<5;( Increment/Decrement: i)}
++)

----------------------------------------------------------------------

2) cat w2f.l
%option noyywrap                                                                                                        
%{                                                                                                                      
#include<stdio.h>                                                                                                       
#include<string.h>                                                                                                      
char *init,*cond;                                                                                                       
char stmts[100]="",incr[100]="";                                                                                        
int incrLength=0;                                                                                                       
%}                                                                                                                      
                                                                                                                        
%x whileLoop                                                                                                            
%x stmt                                                                                                                 
                                                                                                                        
%%                                                                                                                      
                                                                                                                        
[^;];(\n)"while(" {yytext[yyleng-7]='\0'; init=strdup(yytext);BEGIN whileLoop;}                                       
<whileLoop>[^){]*")" {yytext[yyleng-1]='\0'; cond=strdup(yytext);}                                                      
<whileLoop>"{" {BEGIN stmt;}                                                                                            
<stmt>[^;]*";" {incr[0]=' ';strcat(stmts,incr);strcpy(incr,yytext);incrLength=yyleng;}                                  
<stmt>"}" {incr[0]=' ';incr[incrLength-1]='\0';printf("for(%s%s;%s){\n%s\n}",init,cond,incr,stmts);BEGIN INITIAL;}      
                                                                                                                        
%%                                                                                                                      
                                                                                                                        
int main(){                                                                                                             
yyin=fopen("while.c","r");                                                                                              
yylex();                                                                                                                
return 0;                                                                                                               
}
cat while.c
i=0;
while(i<10)
{
        printf("%d",i);
        i++;
}

O/p:
int i=0 ;
while( i<5 ){                                                                                                           
        int j=0 ;
while( j<5 ){                                                                                                           
                printf("%d",i);                                                                                         
        ; j++; i++};
}
-------------------------------------------------------------------------------------------------------------------------
3)cat f2w.l
%option noyywrap
%{
#include<string.h>
#include<stdio.h>
char *incr;
%}

%x loopCond
%x stmt

%%

"for" {BEGIN loopCond;}
<loopCond>"("[^;)]*";" {printf("%s\n",(yytext+1)); unput(';');}
<loopCond>";"[^;)]*";" {yytext[yyleng-1]='\0'; printf("while(%s)",(yytext+1)); unput(';');}
<loopCond>";"[^;)]*")" {yytext[yyleng-1]='\0'; incr=strdup(yytext+1); BEGIN stmt;}
<stmt>"{"[^}]* {printf("%s",yytext);}
<stmt>"}" {printf("%s;\n}",incr);BEGIN INITIAL;}
.
%%

int main(){
yyin = fopen("for.txt","r");
yylex();
return 0;
}


cat for.txt
for(i=0;i<10;i++)
{
printf("%d",i);
}

o/p:
int i=0 ;
while( i<5 ){
        int j=0 ;
while( j<5 ){
                printf("%d",i);
        ; j++; i++};
}
-----------------------------------------------------------------------------------------
4) cat w2f.l
%option noyywrap
%{
#include<stdio.h>
#include<string.h>
char *init,*cond;
char stmts[100]="",incr[100]="";
int incrLength=0;
%}

%x whileLoop
%x stmt

%%

[^;];(\n)"while(" {yytext[yyleng-7]='\0'; init=strdup(yytext);BEGIN whileLoop;}
<whileLoop>[^){]*")" {yytext[yyleng-1]='\0'; cond=strdup(yytext);}
<whileLoop>"{" {BEGIN stmt;}
<stmt>[^;]*";" {incr[0]=' ';strcat(stmts,incr);strcpy(incr,yytext);incrLength=yyleng;}
<stmt>"}" {incr[0]=' ';incr[incrLength-1]='\0';printf("for(%s%s;%s){\n%s\n}",init,cond,incr,stmts);BEGIN INITIAL;}

%%

int main(){
yyin=fopen("while.c","r");
yylex();
return 0;
}

cat while.c
i=0;
while(i<10)
{
        printf("%d",i);
        i++;
}
o/p:
int i=0 ;
while( i<5 ){
        int j=0 ;
while( j<5 ){
                printf("%d",i);
        ; j++; i++};
}
---------------------------------------------------------------------------------
5) nested for to while.l
%option noyywrap
%{
#include<string.h>
#include<stdio.h>
char incr[100]="}",temp[100]="";
%}

for     "for"

%x loopCond
%x stmt

%%

"for" {BEGIN loopCond;}
<loopCond>"("[^;)]*";" {printf("%s\n",(yytext+1)); unput(';');}
<loopCond>";"[^;)]*";" {yytext[yyleng-1]='\0'; printf("while(%s)",(yytext+1)); unput(';');}
<loopCond>";"[^;)]*")" {yytext[yyleng-1]='\0'; strcpy(temp,yytext);strcat(temp,incr);strcpy(incr,temp); BEGIN stmt;}
<stmt>"for"     {BEGIN loopCond;}
<stmt>[^{}{for}]* {printf("%s",yytext);}
<stmt>"}" {printf("%s;\n}",incr);BEGIN INITIAL;}
.
%%

int main(){
yyin = fopen("nestedfor.txt","r");
yylex();
return 0;
}

nestedfor.txt
for(int i=0 ; i<5 ; i++){
        for(int j=0 ; j<5 ; j++){
                printf("%d",i);
        }
}

o/p:
int i=0 ;
while( i<5 ){
        int j=0 ;
while( j<5 ){
                printf("%d",i);
        ; j++; i++};
}
-----------------------------------------------------------------------
6)
%option noyywrap

%{
        #include <stdio.h>
        #include <stdlib.h>
        #include <string.h>
        #define nop printf("")

        int is_infinite = 1;
%}



%x FOR
%x WHILE
%x WHILECOND
%x CONSUME

%%
<INITIAL>"for"   {BEGIN FOR;}
<INITIAL>"while" {BEGIN WHILE;}
<FOR>[^{]*        {int plus_count = 0, minus_count = 0;
                                  int ind = yyleng-1;
                                  printf("This is a for loop : ");
                                  while(ind >= 0 && yytext[ind] != ';'){
                                        if(yytext[ind] == '+' && yytext[ind-1] == '+'){
                                                is_infinite = 0;
                                                break;
                                        }else if(yytext[ind] == '-' && yytext[ind-1] == '-'){
                                                is_infinite = 0;
                                                break;
                                        }
                                        ind--;
                                 }
                                if(is_infinite) printf("Infinite Loop\n");
                                else printf("Finite loop\n");
                                 BEGIN CONSUME;}
<WHILE>[^{]*     {BEGIN WHILECOND;}
<WHILECOND>[^;]* {int ind = yyleng-1;
                                  printf("This is a while loop : ");
                                  while(ind >= 0){
                                        if(yytext[ind] == '+' && yytext[ind-1] == '+'){
                                                is_infinite = 0;
                                                break;
                                        }else if(yytext[ind] == '-' && yytext[ind-1] == '-'){
                                                is_infinite = 0;
                                                break;
                                        }
                                        ind--;
                                }
                                if(is_infinite) printf("Infinite Loop\n");
                                else printf("Finite loop\n");
                                BEGIN CONSUME;}
<CONSUME>(.|\n)*  {nop;}

%%


int main(int argc, char* argv[]){

        yyin = fopen(argv[1], "r");
        yylex();

        fclose(yyin);

        return 0;
}
o/p:
int i=0 ;
while( i<5 ){
        int j=0 ;
while( j<5 ){
                printf("%d",i);
        ; j++; i++};
}
